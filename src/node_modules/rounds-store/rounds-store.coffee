_ = require('lodash')

module.exports = (Restangular, RoundModel, GroupsStore, ContributionModel, FixedCostModel) ->

  get: (round_id) ->
    Restangular.one('rounds', round_id).get()
    .then (round) ->
      new RoundModel(round.plain())

  create: (round) ->
    Restangular.all('rounds').post(round)
    .then (round) ->
      new RoundModel(round.plain())

  getContributorDetails: (roundId, userId) ->
    Restangular.one('rounds', roundId).one('contributors', userId).get().then (details) ->
      ret = {
        allocationAmountCents: details.allocation_amount_cents
        contributions: []
      }
      ret.totalContributionsCents = 0
      for contribution in details.contributions
        ret.contributions.push(new ContributionModel(contribution))
        ret.totalContributionsCents += contribution.amount_cents
      ret.fundsLeftCents = ret.allocationAmountCents - ret.totalContributionsCents

      return ret

  getBuckets: (roundId) ->
    Restangular.one('rounds', roundId).get().then (response) ->
      response.buckets

  getFixedCosts: (roundId) ->
    Restangular.one('rounds', roundId).all('fixed_costs').getList().then (fixedCosts) ->
      _.map fixedCosts, (fixedCost) ->
        new FixedCostModel(fixedCost.plain())
