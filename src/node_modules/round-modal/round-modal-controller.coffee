moment = require('moment')

mergeDateTime = (date, time) ->
  date = new Date(date)
  time = new Date(time)

  year = date.getUTCFullYear()
  month = date.getUTCMonth()
  day = date.getUTCDate()
  hour = time.getUTCHours()
  minute = time.getUTCMinutes()

  new Date(Date.UTC(year, month, day, hour, minute))

### @ngInject ###
module.exports = ($scope, $modalInstance, RoundsStore, RoundModel, group, round) ->

  if round
    serialRound = round.serialize()
    $scope.id = serialRound.id
    $scope.name = serialRound.name
    $scope.startsAtDate = $scope.startsAtTime = serialRound.startsAt
    $scope.endsAtDate = $scope.endsAtTime = serialRound.endsAt

    $scope.title = "Edit Round!"
  else
    now = new Date()
    $scope.startsAtDate = moment(now).toISOString()
    $scope.endsAtDate =
      moment(now).add(5, 'days').toISOString()

    $scope.startsAtTime = $scope.endsAtTime =
      new Date(now.toDateString() + " 00:00")

    $scope.title = "New Round!"

  $scope.submit = (roundForm) ->
    $scope.submitted = true

    if roundForm.$invalid
      return

    unsavedRound = new RoundModel({
      id: $scope.id
      name: $scope.name
      groupId: group.id
      startsAt: mergeDateTime(
        $scope.startsAtDate,
        $scope.startsAtTime
      )
      endsAt: mergeDateTime(
        $scope.endsAtDate,
        $scope.endsAtTime
      )
    })

    # TODO error handling
    RoundsStore.save(unsavedRound)
    .then (savedRound) ->
      $modalInstance.close(savedRound)

  $scope.cancel = ->
    $modalInstance.dismiss('cancel')

  $scope.openDate = (type) ->
    (ev) ->
      ev.preventDefault()
      ev.stopPropagation()

      $scope["#{type}DateOpened"] = true
